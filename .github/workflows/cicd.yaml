name: CICD

on: 
    push: 
        branches: 
            - main
        paths-ignore: 
            - 'README.md'
            - 'helm/**'


jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name :  Checkout repository
              uses: actions/checkout@v4
            
            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                go-version: 1.22
            
            - name: Build
              run: go build -o go-web-app
            
            - name: Test
              run: go test ./...

            - name: Analyze with SonarCloud

              # You can pin the exact commit or the version.
              # uses: SonarSource/sonarcloud-github-action@v2.2.0
              uses: SonarSource/sonarcloud-github-action@4006f663ecaf1f8093e8e4abb9227f6041f52216
              env:
                SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on Sonarcloud.io, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
              with:
                # Additional arguments for the SonarScanner CLI
                args:
                  # Unique keys of your project and organization. You can find them in SonarCloud > Information (bottom-left menu)
                  # mandatory
                  -Dsonar.projectKey=RameshKrishnanNaraKrish_go-web-app
                  -Dsonar.organization=rameshkrishnannarakrish
                  # Comma-separated paths to directories containing main source files.
                  #-Dsonar.sources= # optional, default is project base directory
                  # Comma-separated paths to directories containing test source files.
                  #-Dsonar.tests= # optional. For more info about Code Coverage, please refer to https://docs.sonarcloud.io/enriching/test-coverage/overview/
                  # Adds more detail to both client and server-side analysis logs, activating DEBUG mode for the scanner, and adding client-side environment variables and system properties to the server-side log of analysis report processing.
                  #-Dsonar.verbose= # optional, default is false
                # When you need the analysis to take place in a directory other than the one from which it was launched, default is .
                projectBaseDir: .

    code-quality:
        runs-on: ubuntu-latest

        steps:
            - name :  Checkout repository
              uses: actions/checkout@v4

            - name: Run golangci-lint
              uses: golangci/golangci-lint-action@v6
              with:
                version: v1.56.2


    push:
    runs-on: ubuntu-latest

    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and Push action
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/go-web-app:${{github.run_id}}

  update-newtag-in-helm-chart:
    runs-on: ubuntu-latest

    needs: push

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.TOKEN }}

    - name: Update tag in Helm chart
      run: |
        sed -i 's/tag: .*/tag: "${{github.run_id}}"/' helm/go-web-app-chart/values.yaml

    - name: Commit and push changes
      run: |
        git config --global user.email "ramesh@gmail.com"
        git config --global user.name "Ramesh krishnan"
        git add helm/go-web-app-chart/values.yaml
        git commit -m "Update tag in Helm chart"
        git push
        

        